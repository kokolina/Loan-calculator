#created on: Sep 12, 2008
package Pravila

#list any import classes here.
import java.io.*;
import DomenskeKlase.*;
import org.drools.*;

// 30 pravila

// PRAVILA VEZANA ZA KLIJENTA
rule potr1
ruleflow-group 'prva'	
	when
		z : Zahtev (stanje != false && komitent.starost < 18)
	then 
		z.setStanje(false);
		update(z);
		System.out.println("potr1");
		z.getIzvestaj().addPoruka("Klijent mora biti punoletan",0);
end

rule potr2	
ruleflow-group 'prva'
	
	when
		z : Zahtev(stanje != false && komitent.mesecniPrihod < 8000)
	then 
		z.setStanje(false);
		update(z);
		z.getIzvestaj().addPoruka("Mesecni prihod mora biti veci od 100eur. Mesecni prihod komintenta je "+z.getKomitent().getMesecniPrihod()+"din", 0);
		System.out.println("potr2");
end

rule potr3
ruleflow-group 'prva'
	when
		z : Zahtev(stanje != false && (komitent.zanimanje in ( "ZAPOSLEN" ) && komitent.duzinaPoslovanja  < 6 ))
	
	then	
		z.setStanje(false);
		update(z);
		z.getIzvestaj().addPoruka("Klijent mora da bude u istom poslu bar 6 meseci",0);
		System.out.println("potr3");
end	
	
	
rule potr4
ruleflow-group 'prva'
	when
		z : Zahtev (stanje != false && (komitent.zanimanje in ("PREDUZETIK", "POLJOPRIVREDNIK") && komitent.duzinaPoslovanja < 3))
	then
		z.setStanje(false);
		update(z);
		z.getIzvestaj().addPoruka("Preduzetnici ili poljoprivrednici moraju imati poslovanje starije od 3 meseca",0);
		System.out.println("potr4");
end	
	
rule potr9
ruleflow-group 'prva'
	when
		z : Zahtev(stanje != false && kredit.iznosKredita < 8000)
	then
		z.setStanje(false);
		update(z);
		z.getIzvestaj().addPoruka("Minimalni iznos potrosackog kredita je 100eur",0);
		System.out.println("potr9");
end



// FINANSIJSKA MOGUCNOST
rule potr28
ruleflow-group 'finMogucnost'
salience 5000
	when
		z : Zahtev(komitent .zanimanje in ("POLJOPRIVREDNIK", "PREDUZETNIK")&& pravila not contains "potr28")
	then
		z.getKomitent().setStopaZaduzenosti(0.5);
		System.out.println("potr28");
		z.getIzvestaj().addPoruka("Stopa dozvoljene zaduzenosti: 0,5",2);		
		z.setPravila("potr28");
		update(z);
end

rule potr29
ruleflow-group 'finMogucnost'
salience 5000
	when
		z : Zahtev($prDom : komitent .mesPrihodDomacinstva , $pr : komitent .mesecniPrihod  ,komitent .mesecniPrihod  <= ($prDom - $pr) , komitent .zanimanje in ("ZAPOSLEN", "PENZIONER"), pravila not contains "potr29" )
	then
		z.getKomitent().setStopaZaduzenosti(0.5);
		System.out.println("potr29");
		z.getIzvestaj().addPoruka("Stopa dozvoljene zaduzenosti: 0,5",2);		
		z.setPravila("potr29");                    
		update(z);
end

rule potr30
ruleflow-group 'finMogucnost'
salience 5000
	when
		z : Zahtev($prDom : komitent .mesPrihodDomacinstva , $pr : komitent .mesecniPrihod  ,komitent .mesecniPrihod  > ($prDom - $pr) , komitent .zanimanje in ("ZAPOSLEN", "PENZIONER"), pravila not contains "potr30" )
	then
		z.getKomitent().setStopaZaduzenosti(0.3);
		System.out.println("potr30");
		z.getIzvestaj().addPoruka("Stopa dozvoljene zaduzenosti: 0,3",2);		
		z.setPravila("potr30");                    
		update(z);
end

rule potr5
ruleflow-group 'finMogucnost'
salience 1000	
	when
		z : Zahtev( stanje != false && pravila not contains "potr5" )
	then
		z.getKomitent().setFinansijskaMogucnost(z.getKomitent().getStopaZaduzenosti()*z.getKomitent().getMesecniPrihod()-z.getKomitent().getOstaleFinObaveze());
		z.getIzvestaj().addPoruka("Finansijska mogucnost(zap,penz): "+z.getKomitent().vratiFinMogucnost(),2);
		System.out.println("potr5");
		z.setPravila("potr5");
		update(z);
end
	

rule potr22
ruleflow-group 'finMogucnostProvera'
	when
		z : Zahtev(stanje == true && komitent.finansijskaMogucnost < 0)
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Finansijska mogucnost klijenta je nezadovoljavajuca",0);
		System.out.println("potr22");
		
		update(z);
end

rule potr222
ruleflow-group 'finMogucnostProvera'
salience 200
	when
		z : Zahtev(stanje  == true && komitent.finansijskaMogucnost > 0)
	then		
		z.getIzvestaj().addPoruka("Finansijska mogucnost klijenta je zadovoljavajuca",2);
		System.out.println("potr222");
				
end

// MAXIMALNI ROK OTPLATE
rule potr7
ruleflow-group 'maxRokOtplate'
salience 500
	when
		z : Zahtev(stanje!=false, kredit.namenski  == true, pravila not contains "potr7")
	then
		modify(z){
		getKredit().setMaxRokOtplate(5),
		getIzvestaj().addPoruka("Ako je kredit namenski max rok otplate je 5 godina",2),
		setPravila("potr7")
		}
		System.out.println("potr7");
		
end


rule potr8
ruleflow-group 'maxRokOtplate'
salience 500
	when
		z : Zahtev(stanje!=false, kredit.namenski  == false, pravila not contains "potr8")
	then
		modify(z){
		getKredit().setMaxRokOtplate(2),
		getIzvestaj().addPoruka("Ako je kredit nenamenski max rok otplate je 2 godine",2),
		setPravila("potr8")
		}
		System.out.println("potr8");
		
end


rule potr10
ruleflow-group 'maxRokOtplate'
	when
		
		z : Zahtev(stanje != false && kredit.maxRokOtplate(!= 0 && <kredit.zeljeniRokOtpalte), pravila not contains "potr10" )
		
	then
		z.getKredit().setRokOtplateGod(z.getKredit().getMaxRokOtplate());
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Maximalan rok otplate u ovom slucaju je  "+z.getKredit().getMaxRokOtplate()+" godina.",0);
		System.out.println("potr10");
		z.setPravila("potr10");
		update(z);
end
rule potr11
ruleflow-group 'maxRokOtplate'
	when
		
		z : Zahtev(stanje != false && kredit.maxRokOtplate(!= 0 && >=kredit.zeljeniRokOtpalte), pravila not contains "potr11")
		
	then
		z.getKredit().setRokOtplateGod(z.getKredit().getZeljeniRokOtpalte());		
		z.getIzvestaj().addPoruka("Rok otplate potvrdjen.",2);
		System.out.println("potr11");
		z.setPravila("potr11");
		update(z);
end

rule potr31
ruleflow-group "maxRokOtplate"
	when
		z: Zahtev( stanje == true, $starost: komitent .starost, kredit .rokOtplateGod >(65-$starost))
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("U vreme otplate poslednjeg anuiteta kandidat ne sme biti stariji od 65 godina", 0);
		z.setPravila("potr31");
		
end
// ..........     RIZIK     ............
                          //PLATA
rule potr12
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje  == true && komitent .mesecniPrihod < 400)
	then
		z.setGrupaR(4);
		z.getIzvestaj().addPoruka("Mesecni prihod :: grupa C",2);
		System.out.println("potr12");
		
end

rule potr13
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent .mesecniPrihod (> 400 && <1000))
	then
		z.setGrupaR(2);
		z.getIzvestaj().addPoruka("Mesecni prihod :: grupa B",2);
		System.out.println("potr13");
		
end

rule potr14
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje  == true && komitent .mesecniPrihod > 1000 )
	then
		z.setGrupaR(0);
		z.getIzvestaj().addPoruka("Mesecni prihod :: grupa A",2);
		System.out.println("potr14");
		
end
							//KASNJENJE
rule potr15
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate == 0)
	then
		z.setGrupaR(0);
		z.getIzvestaj().addPoruka("Klijent bez kasnjenja", 2);
		System.out.println("potr15");
	
end							

rule potr16
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate (<15 && >0))
	then
		z.setGrupaR(2);
		z.getIzvestaj().addPoruka("Klijent kasnjenje do 15 dana",2);
		System.out.println("potr16");
		
end							

rule potr17
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate (>15 && <30))
	then
		z.setGrupaR(4);
		z.getIzvestaj().addPoruka("Klijent kasnjenje 15-30 dana",2);
		System.out.println("potr17");
		
end							

rule potr18
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate >30)
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Zbog velikih kasnjenja u isplati predhodnih kredita zahtev se odbija", 0);
		System.out.println("potr18");
		update(z);
end
				//STAROST
				
rule potr19
ruleflow-group 'rizik'
	when
		z : Zahtev(komitent .starost  (>18 && < 25 || >45))
	then
		z.setGrupaR(4);
		z.getIzvestaj().addPoruka("Starost klijenta :: C grupa",2);
		System.out.println("potr19");
		
end	

rule potr20
ruleflow-group 'rizik'
	when
		z : Zahtev(komitent.starost (>25 && <30 || >40 && <45))
	then
		z.setGrupaR(2);
		z.getIzvestaj().addPoruka("Starost klijenta :: B grupa",2);
		System.out.println("potr20");
		
end
	
rule potr21
ruleflow-group 'rizik'
	when
		z : Zahtev(komitent.starost (>30 && <40))
	then
		z.setGrupaR(0);
		z.getIzvestaj().addPoruka("Starost klijenta :: A grupa",2);
		System.out.println("potr21");
end

rule potr26
ruleflow-group 'rizik'
	when
		z : Zahtev(komitent.klijentBanke == true)
	then
		z.setGrupaR(-2);
		z.getIzvestaj().addPoruka("Popust za klijente banke",2);
		System.out.println("potr26");
end
	

//   DRUGI KRUG PRAVILA...
rule potr24
ruleflow-group 'druga'
	when
		z : Zahtev(stanje != false, $mesRata : kredit.mesRata, komitent.finansijskaMogucnost < $mesRata )
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Mesecna rata kredita prevazilazi vase mesecne finansijske mogucnosti",0);
		update(z);;
		System.out.println("potr24");
end

rule potr25
ruleflow-group 'druga'
	when
		z : Zahtev(kredit .indexirani == true)
	then
		z.getKredit().setDepozit(0.3);
		System.out.println("potr25");
		
end

rule potr27
ruleflow-group 'druga'
	when
		z : Zahtev((komitent.klijentBanke == false && kredit.zeljeniRokOtpalte > 36)|| kredit.iznosKredita > 400000) 
		
	then	
		z.getKredit().setZirant(true);
		z.getIzvestaj().addPoruka("Ukoliko je zeljeni rok otplate duzi od 3 godine ili je iznos kredita veci od 400000din potreban je zirant",2);
		System.out.println("potr27");
		
end








