#created on: Sep 12, 2008
package Pravila

#list any import classes here.
import DomenskeKlase.*;
import java.io.*;

// 30 pravila
#declare any global variables here

// duzina poslovanja fali       () 6 meseci minimum

rule AIR1
ruleflow-group "prva"
salience 7000
	when
		z : Zahtev(stanje == true, komitent.drzavljaninRS == false, pravila not contains "AIR1" )
	then 
		z.setStanje(false);
		System.out.println("AIR1");
		update(z);
		z.setPravila("AIR1");
		z.getIzvestaj().addPoruka("Krediti za adaptaciju i rekonstrukciju se ne daju stranim drzavljanima",0);
end  //radi

rule AIR2
ruleflow-group "prva"
salience 6000
	when
		z : Zahtev( stanje == true, komitent .starost < 18, pravila not contains "AIR2" )
	then 
		z.setStanje(false);
		System.out.println("AIR2");
		update(z);
		z.setPravila("AIR2");
		z.getIzvestaj().addPoruka("Klijent je maloletan.",0);
		
end  //radi

rule AIR3
ruleflow-group "prva"
salience 5000
	when
		z : Zahtev( stanje == true, kredit .iznosKredita < 20000 , pravila not contains "AIR3")
	then
		z.setStanje(false);	
		z.setPravila("AIR3");
		update(z);	
		z.getIzvestaj().addPoruka("Najmanji iznos na koji mozete dobiti kredit je 250eur.",0);
		System.out.println("AIR3");
end  //radi

rule AIR4
ruleflow-group "prva"
salience 4000
	when
		z : Zahtev( stanje == true, kredit .iznosKredita > 4000000 , pravila not contains "AIR4")
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Gornja granica iznosa kredita je 50000eur",0);
		z.setPravila("AIR4");
		update(z);		
		System.out.println("AIR4");
end  //radi


rule AIR7
ruleflow-group "prva"
salience 1000
	when
		z : Zahtev( stanje == true, kredit .osiguranjeNKOSK ==true, komitent .starost <23 , pravila not contains "AIR7")
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Ukoliko klijent zeli kredit osiguran kod Nacionalne za osiguranje stambenih kredita mora imati minimum 23 godine",0);
		System.out.println("AIR7");
		z.setPravila("AIR7");
		update(z);
end  //radi



//ROKOVI OTPLATE
// ovde je stanje sigurno true
rule AIR8
ruleflow-group "RokoviOtplate"
salience 7000
when
		z : Zahtev( kredit .namenski == true, kredit .iznosKredita <= 800000, pravila not contains "AIR8" )
then
		z.getKredit().setMaxRokOtplate(5);
		System.out.println("AIR8");
		z.getIzvestaj().addPoruka("U skladu za namenom i iznosom kredita maksimalni rok otplate je 5 godina",2);
		z.setPravila("AIR8");
		update(z);
end  //radi

rule AIR9
ruleflow-group "RokoviOtplate"
salience 7000
when
	z: Zahtev(kredit .namenski == true, kredit .iznosKredita (<=1600000 && >800000 ), pravila not contains "AIR9" )
then
	z.getKredit().setMaxRokOtplate(7);
	System.out.println("AIR9");
	z.getIzvestaj().addPoruka("U skladu za namenom i iznosom kredita maksimalni rok otplate je 7 godina",2);
	z.setPravila("AIR9");
	update(z);	
end  //radi


rule AIR10
ruleflow-group "RokoviOtplate"
salience 7000
when
	z: Zahtev(kredit.namenski == true, kredit.iznosKredita >1600000, pravila not contains "AIR10" )
then
	z.getKredit().setMaxRokOtplate(20);
	System.out.println("AIR10");
	z.getIzvestaj().addPoruka("U skladu za namenom i iznosom kredita maksimalni rok otplate je 20 godina",2);
	z.setPravila("AIR10");
	update(z);	
end   //radi

rule AIR11
ruleflow-group "RokoviOtplate"
salience 7000
when
	z: Zahtev( kredit .namenski == false, kredit .iznosKredita <=1600000 , pravila not contains "AIR11")
then
	z.getKredit().setMaxRokOtplate(2);
	System.out.println("AIR11");
	z.getIzvestaj().addPoruka("U skladu za namenom i iznosom kredita maksimalni rok otplate je 2 godine",2);
	z.setPravila("AIR11");
	update(z);	
end    //radi

rule AIR12
ruleflow-group "RokoviOtplate"
salience 7000
when
	z:Zahtev( kredit .namenski == false, kredit .iznosKredita > 1600000, pravila not contains "AIR12" )
then
	z.setStanje(false);
	z.setPravila("AIR12");
	update(z);
	System.out.println("AIR12");
	z.getIzvestaj().addPoruka("Kredit mora biti 100% pokriven profakturama ukoliko je iznos veci od 20000eur",0);
end   //radi


rule AIR14
ruleflow-group "RokoviOtplate"
salience 5000
when
	z: Zahtev( stanje == true, $r: kredit .maxRokOtplate , kredit .zeljeniRokOtpalte <= $r, pravila not contains "AIR14" )
then
	z.getKredit().setRokOtplateGod(z.getKredit().getZeljeniRokOtpalte());
	z.getIzvestaj().addPoruka("Potvrdjen rok otplate.", 2);
	System.out.println("AIR14");
	z.setPravila("AIR14");
	update(z);
end   //radi

rule AIR15
ruleflow-group "RokoviOtplate"
salience 2000
when
	z: Zahtev( stanje != false && kredit.maxRokOtplate(!= 0 && <kredit.zeljeniRokOtpalte)&& pravila not contains "AIR15" )
then
	z.setStanje(false);
	z.getIzvestaj().addPoruka("Zeljeni rok otplate prevazilazi maksimalni rok za ovu vrstu kredita.", 0);
	System.out.println("AIR15");
	z.setPravila("AIR15");	
end   //radi

rule AIR33
ruleflow-group "RokoviOtplate"
when
	z: Zahtev( $rok: kredit .rokOtplateGod , stanje ==true, komitent .starost > (65 - $rok) )
then
	modify(z){
		setStanje(false),
		getIzvestaj().addPoruka("U vreme otplate poslednjeg anuiteta komitent ne sme biti stariji od 65 godina",0),
		setPravila("AIR33")
	}
	System.out.println("AIR33");
	
end

//STOPA ZADUZENOSTI I FINANSIJSKA MOGUCNOST
rule AIR16
ruleflow-group "FinansijskaMogucnost"
salience 5000
when
	z:Zahtev(kredit.namenski == true, pravila not contains "AIR16" )
then
	z.getKomitent().setStopaZaduzenosti(0.5);
	z.setPravila("AIR16");
	update(z);
	System.out.println("AIR16");
	z.getIzvestaj().addPoruka("Stopa dozvoljene zaduzenosti je "+z.getKomitent().getStopaZaduzenosti(),2);
end   //radi

rule AIR17
ruleflow-group "FinansijskaMogucnost"
salience 5000
when
	z:Zahtev( kredit .namenski == false, pravila not contains "AIR17" )
then
	z.getKomitent().setStopaZaduzenosti(0.3);
	z.setPravila("AIR17");
	update(z);
	System.out.println("AIR17");
	z.getIzvestaj().addPoruka("Stopa dozvoljene zaduzenosti je "+z.getKomitent().getStopaZaduzenosti(),2);
end   //radi

rule AIR18
ruleflow-group "FinansijskaMogucnost"
salience 100
when
	z: Zahtev( pravila not contains "AIR18" )
then
	modify (z){
		getKomitent().setFinansijskaMogucnost(z.getKomitent().getStopaZaduzenosti()*z.getKomitent().getMesecniPrihod()-z.getKomitent().getOstaleFinObaveze()),		
		getIzvestaj().addPoruka("Mesecna finansijske mogucnosti komitenta je "+z.getKomitent().getFinansijskaMogucnost(),2),
		setPravila("AIR18")
		}		
		System.out.println("AIR18");	
end

rule AIR19
ruleflow-group "FinansijskaMogucnost"
when
	z:Zahtev( stanje == true && komitent .finansijskaMogucnost <= 0 && pravila not contains "AIR19"  )
then
	z.setPravila("AIR19");
	z.setStanje(false);
	z.getIzvestaj().addPoruka("Komitentova finansijska mogucnost je negativna",0);
	update(z);
	System.out.println("AIR19");
end   //radi


//  ................................................................................
//  RIZIK ...........

rule AIR20
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje  == true && komitent .mesecniPrihod < 400)
	then
		z.setGrupaR(4);
		z.getIzvestaj().addPoruka("Mesecni prihod :: grupa C",2);
		System.out.println("AIR20");
		
end

rule AIR21
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent .mesecniPrihod (> 400 && <1000))
	then
		z.setGrupaR(2);
		z.getIzvestaj().addPoruka("Mesecni prihod :: grupa B",2);
		System.out.println("AIR21");
		
end

rule AIR22
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje  == true && komitent .mesecniPrihod > 1000 )
	then
		z.setGrupaR(0);
		z.getIzvestaj().addPoruka("Mesecni prihod :: grupa A",2);
		System.out.println("AIR22");
		
end
							//KASNJENJE
rule AIR23
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate == 0)
	then
		z.setGrupaR(0);
		z.getIzvestaj().addPoruka("Klijent bez kasnjenja", 2);
		System.out.println("AIR23");
	
end							

rule AIR24
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate (<15 && >0))
	then
		z.setGrupaR(2);
		z.getIzvestaj().addPoruka("Klijent kasnjenje do 15 dana",2);
		System.out.println("AIR24");
		
end							

rule AIR25
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate (>15 && <30))
	then
		z.setGrupaR(4);
		z.getIzvestaj().addPoruka("Klijent kasnjenje 15-30 dana",2);
		System.out.println("AIR25");
		
end							

rule AIR26
ruleflow-group 'rizik'
	when
		z : Zahtev(stanje == true && komitent.ukupnoKasnjenjeIsplate >30)
	then
		z.setStanje(false);
		z.getIzvestaj().addPoruka("Zbog velikih kasnjenja u isplati predhodnih kredita zahtev se odbija", 0);
		System.out.println("AIR26");
		update(z);
end
				//STAROST
				
rule AIR27
ruleflow-group 'rizik'
	when
		z : Zahtev(komitent .starost  (>18 && < 25 || >45))
	then
		z.setGrupaR(4);
		z.getIzvestaj().addPoruka("Starost klijenta :: C grupa",2);
		System.out.println("AIR27");
		
end	

rule AIR28
ruleflow-group 'rizik'
	when
		z : Zahtev(komitent.starost (>25 && <30 || >40 && <45))
	then
		z.setGrupaR(2);
		z.getIzvestaj().addPoruka("Starost klijenta :: B grupa",2);
		System.out.println("AIR28");
		
end
	
	rule AIR29
	ruleflow-group 'rizik'
	when
		z : Zahtev(komitent.starost (>30 && <40))
	then
		z.setGrupaR(0);
		z.getIzvestaj().addPoruka("Starost klijenta :: A grupa",2);
		System.out.println("AIR29");
		
		
end

rule AIR30
ruleflow-group "rizik"
	when
		z : Zahtev(komitent.klijentBanke == true)
	then
		z.setGrupaR(-2);
		z.getIzvestaj().addPoruka("Popust za klijente banke",2);
		System.out.println("AIR30");
end
rule AIR34
ruleflow-group "rizik"
when
	z: Zahtev( komitent.duzinaStanovanjaNaIstomMestu < 2 )
then
	z.setGrupaR(4);
	z.getIzvestaj().addPoruka("Duzina stanovanja na istom mestu do 2 godina. Visok rizik.",2);
	System.out.println("ST31");
end

rule AIR35
ruleflow-group "rizik"
when
	z : Zahtev( komitent.duzinaStanovanjaNaIstomMestu (<4 && >2) )
then
	z.setGrupaR(2);
	z.getIzvestaj().addPoruka("Duzina stanovanja na istom mestu od 2 do 4 godine. B grupa rizika.",2);
end

rule AIR36
ruleflow-group "rizik"
when
	z: Zahtev( komitent.duzinaStanovanjaNaIstomMestu >4 )
then
	z.setGrupaR(0);
	z.getIzvestaj().addPoruka("Duzina stanovanja na istom mestu duza od 4 godine. Grupa rizika A",2);
end	
	
	
	
	// .......................................................................................
	// DRUGI KRUG PRAVILA

rule AIR31
ruleflow-group "SredstvaObezbedjenja"
when
	z : Zahtev( kredit .iznosKredita > 1600000, pravila not contains "AIR31" )
then
	modify(z){
	getKredit().setDepozit(0.2),	
	getKredit().setGrejsPeriod(1),
	getKredit().setHipo(1.1),
	setPravila("AIR31")
	}
	
	System.out.println("AIR31");
end

rule AIR32
ruleflow-group "SredstvaObezbedjenja"
when
	z: Zahtev( kredit .pokrivenostProfakturama < 100 && kredit.iznosKredita <=1600000)
then
	modify(z){
		getKredit().setDepozit(0.3)
	}
	System.out.println("AIR32");
end








